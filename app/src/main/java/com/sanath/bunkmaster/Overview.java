package com.sanath.bunkmaster;

import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.NavigationView;
import android.support.multidex.MultiDex;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.CardView;
import android.support.v7.widget.Toolbar;
import android.view.Gravity;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

import com.sanath.bunkmaster.database.AttendanceDatabase;
import com.sanath.bunkmaster.database.SubjectDatabase;

import java.util.ArrayList;

public class Overview extends AppCompatActivity {//implements NavigationView.OnNavigationItemSelectedListener {

    DrawerLayout drawer;
    NavigationView navigationView;
    TableLayout contentOverview;
    CardView cardView[];
    TextView subject[], total, attended, percent;

    //private StartAppAd startAppAd = new StartAppAd(this);

    PreferenceManager preferenceManager;
    SubjectDatabase subdb;
    AttendanceDatabase attenddb;

    ArrayList<String> subArray = new ArrayList<>();
    ArrayList<AttendanceModel> attArray = new ArrayList<>();
    boolean flag = false;

    @Override
    protected void attachBaseContext(Context newBase) {
        super.attachBaseContext(newBase);
        MultiDex.install(this);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //StartAppSDK.init(this, "200680880", false);
        //StartAppAd.disableSplash();
        //InMobiSdk.init(Overview.this, "05ca6a864fe84192bcf6a8aee7b97ce3");
        setContentView(R.layout.overview);

//        startActivity(new Intent(Overview.this, StatusEntry.class));
//        finish();

        //To check if layout is generated by onCreate() or onResume()
        flag = true;

        contentOverview = (TableLayout) findViewById(R.id.overview_relative);
        subdb = new SubjectDatabase(this);
        attenddb = new AttendanceDatabase(this);
        preferenceManager = new PreferenceManager(this);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(@NonNull MenuItem item) {

                Fragment fragment = null;

                //Navigation Menu items
                switch (item.getItemId())
                {
                    case R.id.today:
                        fragment= new TodayAttendance();

                        break;

                    case R.id.view_timetable:
                        fragment = new ViewTimetable(Overview.this);

                        break;

                    case R.id.goto_day:
                        fragment = new Goto();

                        break;

                    case R.id.settings:
                        startActivity(new Intent(Overview.this, Settings.class));
                        //startAppAd.showAd();

                        break;
                }
                //Close the drawer when user selects an item
                drawer.closeDrawer(GravityCompat.START);

                //Begin transition to a fragment
                if (fragment != null) {
                    FragmentManager fragmentManager = getSupportFragmentManager();
                    fragmentManager.popBackStackImmediate();
                    FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
                    fragmentTransaction.replace(R.id.content_frame, fragment).addToBackStack("Bunkmaster");
                    fragmentTransaction.commit();
                    //getSupportActionBar().setTitle(title);
                }
                return true;
            }
        });

        //Create the display objects in Overview
        genOverviewView();
    }

    private void genOverviewView() {

        RelativeLayout.LayoutParams cardParams = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.WRAP_CONTENT);
        cardParams.setMargins(0, 100, 0, 100);
        //RelativeLayout.LayoutParams contentParams = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
        //        ViewGroup.LayoutParams.WRAP_CONTENT);

        TableLayout.LayoutParams params = new TableLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 200);
        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(0, TableLayout.LayoutParams.WRAP_CONTENT, 1);

        //Get subjects entered by the user
        subdb.open();
        Cursor c1 = subdb.getQueryResult("SELECT * FROM SUBJECT");
        c1.moveToFirst();

        subArray.clear();
        for (int k = 0; k < c1.getCount(); k++) {

            String s = c1.getString(1);
            subArray.add(s);
            c1.moveToNext();
        }
        c1.close();
        subdb.close();

        //Get the attendance status of user
        attenddb.open();
        Cursor c = attenddb.getQueryResult("SELECT * FROM ATTENDANCE");
        c.moveToFirst();

        attArray.clear();
        for (int k = 0; k < c.getCount(); k++) {

            String s = c.getString(1);
            int t = c.getInt(2);
            int a = c.getInt(3);
            int p = c.getInt(4);
            AttendanceModel am = new AttendanceModel(s, t, a , p);
            attArray.add(am);
            c.moveToNext();
        }
        c.close();
        attenddb.close();

        cardView = new CardView[subArray.size()];
        subject = new TextView[subArray.size()];

        for(int i=0; i<subArray.size(); i++)
        {
            cardView[i] = new CardView(this);
            cardView[i].setLayoutParams(cardParams);
            cardView[i].setPadding(0, 5, 0, 5);
            cardView[i].setClickable(true);
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                cardView[i].setElevation(15);
            }
            cardView[i].setRadius(5);
            cardView[i].setBackgroundColor(getResources().getColor(R.color.transparentWhite));
            subject[i] = new TextView(this);
            total = new TextView(this);
            attended = new TextView(this);
            percent = new TextView(this);
            //LinearLayout layout = new LinearLayout(this);
            //layout.setOrientation(LinearLayout.HORIZONTAL);
            //layout.setLayoutParams(contentParams);
            TableRow layout = new TableRow(this);
            layout.setLayoutParams(params);
            //layout.setOrientation(LinearLayout.HORIZONTAL);

            for(int j=1; j<=2; j++)
            {
                if(j==1)
                {
                    subject[i].setLayoutParams(rowParams);
                    subject[i].setText((attArray.get(i)).getSubject());
                    subject[i].setTextSize(25);
                    subject[i].setTextColor(getResources().getColor(R.color.colorAccent));
                    layout.addView(subject[i]);
                }
                /*else if (j==2)
                {
                    total.setText(""+(attArray.get(i)).getTotal());
                    cardView[i].addView(total);
                }
                else if (j==3)
                {
                    attended.setText(""+(attArray.get(i)).getAttended());
                    cardView[i].addView(attended);
                }*/
                else if (j==2)
                {
                    percent.setLayoutParams(rowParams);
                    percent.setText(""+(attArray.get(i)).getPercent()+"%");
                    percent.setTextSize(25);
                    percent.setGravity(Gravity.CENTER_VERTICAL);
                    if((attArray.get(i)).getPercent() >= preferenceManager.PercentAttendance())
                        percent.setTextColor(Color.GREEN);
                    else
                        percent.setTextColor(Color.RED);
                    layout.addView(percent);
                }
            }
//            Toast.makeText(Overview.this, ""+(attArray.get(i)).getSubject()+"\n"+(attArray.get(i)).getTotal()+
//                    "\n"+(attArray.get(i)).getAttended()+
//                    "\n"+(attArray.get(i)).getPercent(), Toast.LENGTH_SHORT).show();
            cardView[i].addView(layout);
            contentOverview.addView(cardView[i]);

            //OnClick of CardView to display more details
            final int finalI = i;
            cardView[i].setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {

                    Intent intent = new Intent(Overview.this, SubjectDetails.class);
                    intent.putExtra("Subject", subject[finalI].getText().toString());
                    startActivity(intent);
                }
            });
        }
    }

    @Override
    protected void onResume() {
        super.onResume();

        //When layout has to be inflated by onResume
        if(!flag)
            genOverviewView();
    }

//    @Override
//    protected void onStop() {
//        startAppAd.showAd();
//        super.onStop();
//    }

    @Override
    public void onBackPressed() {

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);

        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        }
//        else {
//            //startAppAd.onBackPressed();
//            //super.onBackPressed();
//        }
    }
    /*@SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
        // Handle navigation view item clicks here.

        Fragment fragment = null;

        switch (item.getItemId())
        {
            case R.id.nav_camera:

                break;

            case R.id.view_timetable:

                fragment = new ViewTimetable();

                break;

            case R.id.nav_slideshow:

            break;

            case R.id.nav_manage:

                break;

            case R.id.nav_share:

                break;

            case R.id.nav_send:

                break;

        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }*/
}
